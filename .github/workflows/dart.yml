name: Dart CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

  install_flutter:
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - uses: actions/checkout@v4
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

  set_env_vars:
    runs-on: ubuntu-latest
    needs: install_flutter

    steps:
      - uses: actions/checkout@v4
      - name: Set up environment variables
        working-directory: mobile
        env:
          API_URL_ANDROID: ${{ secrets.API_URL_ANDROID }}
          API_URL_IOS: ${{ secrets.API_URL_IOS }}
        run: | 
          echo "API_URL_ANDROID=$API_URL_ANDROID" >> $GITHUB_ENV 
          echo "API_URL_IOS=$API_URL_IOS" >> $GITHUB_ENV

  install_dependencies:
    runs-on: ubuntu-latest
    needs: set_env_vars

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        working-directory: mobile
        run: flutter pub get

  analyze:
    runs-on: ubuntu-latest
    needs: install_dependencies

    steps:
      - uses: actions/checkout@v4
      - name: Analyze project source
        working-directory: mobile
        run: flutter analyze
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: analyze

    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        working-directory: mobile
        run: flutter test
        continue-on-error: true
  
  #build_android:
  #  runs-on: ubuntu-latest
  #  needs: test
#
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Build project
  #      working-directory: mobile
  #      run: flutter build appbundle
  #
  #upload_android:
  #  runs-on: ubuntu-latest
  #  needs: build_android
#
  #  steps:
  #    - name: Upload to Google Play
  #      uses: r0adkll/upload-google-play@v1
  #      with:
  #        serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
  #        packageName: ${{ secrets.PACKAGE_NAME }}
  #        releaseFile: mobile/build/app/outputs/bundle/release/app-release.aab
  #        track: internal
  #
  #build_ios:
  #  runs-on: ubuntu-latest
  #  needs: test
#
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Build project
  #      working-directory: mobile
  #      run: flutter build ios --release --no-codesign
#
  #upload_ios:
  #  runs-on: ubuntu-latest
  #  needs: build_ios
#
  #  steps:
  #    - name: 'Upload app to TestFlight'
  #      uses: apple-actions/upload-testflight-build@v1
  #      with: 
  #        app-path: 'path/to/application.ipa' 
  #        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
  #        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
  #        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}